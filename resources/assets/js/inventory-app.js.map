{"version":3,"sources":["inventory.js","item-movement-show.js","utils.js"],"names":[],"mappingsjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"inventory-app.js","sourcesContent":["Vue.http.headers.common['X-CSRF-TOKEN'] = document.querySelector('#token').getAttribute('value');\r\nVue.config.debug = true; // turn on debugging mode\r\nif(typeof google !== \"undefined\"){\r\n    google.load('visualization', '1', {packages: ['corechart', 'line']});\r\n\r\n}\r\nvar makeTableResponsive = function(){\r\n    Vue.nextTick(function(){\r\n\r\n        $(\".tablesaw\").table();\r\n    });\r\n};\r\nvar states = [\r\n    'Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California',\r\n    'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia',\r\n    'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa',\r\n    'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland',\r\n    'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi',\r\n    'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire',\r\n    'New Jersey', 'New Mexico', 'New York', 'North Carolina',\r\n    'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania',\r\n    'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee',\r\n    'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington',\r\n    'West Virginia', 'Wisconsin', 'Wyoming'\r\n];\r\n\r\n\r\n$(function() {\r\n\r\n    // authentication. Hi-jack form submission and submit using ajax.\r\n    // The ajax login will get an authenticated token to use.\r\n    $(\".ajax-submit-for-token\").on('submit', function(e){\r\n        e.preventDefault();\r\n        var $that = $(this);\r\n        var formData = $that.serialize();\r\n        $.ajax({\r\n            url :$that.attr('action'),\r\n            data: formData,\r\n            dataType: 'JSON',\r\n            type: \"POST\",\r\n            headers: {\r\n                'X-CSRF-TOKEN': document.querySelector('#token').getAttribute('value'),\r\n\r\n            },\r\n            success: function(data){\r\n                if(data.result == \"success\"){\r\n                    window.location = \"/home\";\r\n\r\n                }\r\n                debugger;\r\n            },\r\n            error: function(){\r\n                debugger;\r\n            }\r\n        })\r\n    })\r\n\r\n});\r\nVue.component('dashboard', {\r\n    template: document.querySelector(\"#dashboard-template\"),\r\n    data: function () {\r\n        return {\r\n            expectedDeliveries: [\r\n                {\r\n                    id: 10,\r\n                    item_name: \"Bottle Caps\",\r\n                    expected_at: \"2015-11-04 11:00:00 +1100\"\r\n                },\r\n                {\r\n                    id: 11,\r\n                    item_name: \"Bottle Caps\",\r\n                    expected_at: \"2015-11-04 11:00:00 +1100\"\r\n                },\r\n            ],\r\n            itemsBelowMinimum: [\r\n                {\r\n                    id: 10,\r\n                    item_name: \"Bottle Caps\",\r\n                    expected_at: \"2015-11-04 11:00:00 +1100\",\r\n                    quantity: 500,\r\n                },\r\n                {\r\n                    id: 11,\r\n                    item_name: \"Bottle Caps\",\r\n                    expected_at: \"2015-11-04 11:00:00 +1100\",\r\n                    quantity: 400,\r\n                },\r\n            ],\r\n            feed: [\r\n                {\r\n                    quantity: 1000,\r\n                    item_name: \"Bottle Caps\",\r\n                    created_at_human: \"10m ago\",\r\n                    item: {item_name: \"\"}\r\n                },\r\n                {\r\n                    quantity: -5,\r\n                    item_name: \"Bottle Caps\",\r\n                    created_at_human: \"20m ago\",\r\n                    item: {item_name: \"\"}\r\n                },\r\n                {\r\n                    quantity: -7,\r\n                    item_name: \"Bottle Caps\",\r\n                    created_at_human: \"24m ago\",\r\n                    item: {item_name: \"\"}\r\n                },\r\n            ],\r\n            showExpectedDeliveries: false,\r\n            showItemsBelowMinimum: false,\r\n            selectedItem: \"\",\r\n        }\r\n    },\r\n    ready: function(){\r\n        this.fetchDashboard();\r\n        this.fetchTypeaheadItems();\r\n\r\n    },\r\n    props: [],\r\n    methods: {\r\n        fetchDashboard: function(){\r\n            this.$http.get('api/v1/dashboard', function(response){\r\n                for(var key in response.data){\r\n                    this[key] = response.data[key];\r\n                }\r\n                // this.items = response.items;\r\n                makeTableResponsive();\r\n            });\r\n        },\r\n\r\n        fetchTypeaheadItems: function(){\r\n            this.$http.get('/api/v1/items/?perPage=10000', function(response){\r\n\r\n\r\n\r\n                for(var i = 0; i <response.data.length; i++){\r\n                    response.data[i].name = response.data[i].item_name;\r\n                }\r\n\r\n                var that = this;\r\n                $(\"#item-name-autocomplete\").autocomplete({\r\n                    valueKey: 'item_name',\r\n                    titleKey: 'item_name',\r\n                    filter: function(items,query,source){\r\n                        query = query.toLowerCase();\r\n                        var query_barcoded = query.replace(\"*\",\"\");\r\n                        var results = [],value = '';\r\n                        for(var i in items){\r\n                            if(items[i].item_name.toLowerCase().indexOf(query) > -1){\r\n                                results.push(items[i]);\r\n                            }\r\n                            if(items[i].item_code.toLowerCase().indexOf(query_barcoded) > -1){\r\n                                results.push(items[i]);\r\n                            }\r\n                        }\r\n\r\n                            return results;\r\n\r\n                    },\r\n                    source:[\r\n                        {\r\n                            data: response.data\r\n                        }\r\n                    ]\r\n                }).on('selected.xdsoft', function(e, obj){\r\n                    that.selectedItem = obj;\r\n                })\r\n\r\n            },'json');\r\n        },\r\n\r\n        clearSelectedItem: function(){\r\n            this.selectedItem = \"\";\r\n            $(\"#item-name-typeahead\").val(\"\").focus();\r\n        },\r\n\r\n        redirectToURL: function(url){\r\n            document.location = url;\r\n        }\r\n    }\r\n});\r\nVue.component('movement-list', {\r\n    template: document.querySelector(\"#movement-list-template\"),\r\n    data: function(){\r\n        return {\r\n            item_id: \"\",\r\n            from: 0,\r\n            to: 0,\r\n            total: 0,\r\n            current_page: 0,\r\n            last_page: 0,\r\n            movements: [],\r\n            item: {},\r\n        }\r\n    },\r\n    props: ['passed_item_id'],\r\n\r\n    ready: function(){\r\n        this.item_id = this.passed_item_id;\r\n        this.fetchMovements();\r\n        this.fetchItem();\r\n    },\r\n    methods: {\r\n        fetchMovements: function(page){\r\n            var moment = require('moment-timezone');\r\n            var url = '/api/v1/items/' + this.item_id + '/movements?page=' + page + \"&perPage=100\";\r\n            this.$http.get(url, function(response){\r\n                this.from = response.from;\r\n                this.to = response.to;\r\n                this.total = response.total;\r\n                this.current_page = response.current_page;\r\n                this.last_page = response.last_page;\r\n                this.movements = response.data;\r\n                _.each(this.movements, function(m){\r\n                    var mom = moment(m.created_at);\r\n                    m.local_time = mom.tz('Australia/Sydney').format(\"ddd, MMM Do YYYY, h:mm:ss a\");\r\n                });\r\n\r\n\r\n                this.item = response.item;\r\n                makeTableResponsive();\r\n            });\r\n        },\r\n        fetchItem: function(){\r\n            var url = '/api/v1/items/' + this.item_id;\r\n            this.$http.get(url, function(response){\r\n                this.item = response.item;\r\n\r\n\r\n            });\r\n        }\r\n    }\r\n});\r\nVue.component('movement-create', {\r\n    template: document.querySelector(\"#movement-create-template\"),\r\n    data: function(){\r\n        return {\r\n            item: false,\r\n            item_id: \"\",\r\n            direction: \"\",\r\n            direction_int: 0,\r\n\r\n            movements: [],\r\n            new_movement: {\r\n                description: \"\",\r\n                reference: \"\",\r\n                quantity: \"\"\r\n            },\r\n            saving: false,\r\n        }\r\n    },\r\n    props: ['passed_direction', 'passed_id'],\r\n    ready: function(){\r\n        this.direction = this.passed_direction;\r\n        this.direction_int = this.passed_direction == \"in\" ? 1 : -1;\r\n        this.item_id = this.passed_id;\r\n        this.fetchItem();\r\n    },\r\n    methods: {\r\n        fetchItem: function(){\r\n            this.$http.get(\"/api/v1/items/\" + this.item_id, function(response){\r\n                this.item = response.item;\r\n            });\r\n        },\r\n        saveNewMovement: function(e){\r\n            this.saving = true;\r\n            e.preventDefault();\r\n            this.new_movement.quantity *= this.direction_int;\r\n            this.$http.post(\"/api/v1/items/\" + this.item_id + \"/movements/\", this.new_movement, function(response){\r\n                this.saving = false;\r\n                this.movements.push(response.movement);\r\n                this.$dispatch('new-movement-saved', response.movement);\r\n                this.item = response.item;\r\n\r\n                this.item.quantity += this.new_movement.quantity;\r\n                this.new_movement.description = \"\";\r\n                this.new_movement.reference = \"\";\r\n                this.new_movement.quantity = \"\";\r\n            }).error(function(d,s,r){\r\n                // re-enable saving and call generic handler.\r\n                this.saving = false;\r\n                window.httpErrorHandler(d,s,r);\r\n            });\r\n        }\r\n    }\r\n});\r\nVue.component('movements-recent', {\r\n    template: document.querySelector(\"#movements-recent-template\"),\r\n    data: function () {\r\n        return {\r\n            movements: [],\r\n            item_id: 0\r\n        }\r\n    },\r\n    props: ['passed_item_id', 'passed_item'],\r\n    ready: function(){\r\n        this.item_id = this.passed_item_id;\r\n        this.item = this.passed_item;\r\n        this.fetchLastMovements();\r\n    },\r\n    created: function(){\r\n        this.$on('new-movement-saved', function(movement){\r\n            this.movements.push(movement);\r\n            this.$dispatch('movements-received');\r\n        });\r\n    },\r\n    methods: {\r\n        fetchLastMovements: function(){\r\n            this.$http.get(\"/api/v1/items/\"+ this.item_id + \"/movements?perPage=50\", function(response){\r\n                this.movements = response.data;\r\n                // this.loadChart(response.data);\r\n\r\n                this.$dispatch(\"movements-received\", {movements: response.data, item: this.item});\r\n\r\n            });\r\n        },\r\n    }\r\n});\r\nVue.component('movements-chart', {\r\n    template: '<div id=\"chart_div\"></div>',\r\n    data: function () {\r\n        return {item: false}\r\n    },\r\n    created: function(){\r\n        this.$on('movements-received', function(movements){\r\n            this.loadChart(movements);\r\n        });\r\n    },\r\n    props: [],\r\n    methods: {\r\n\r\n        loadChart: function(movement_data){\r\n            var data = new google.visualization.DataTable();\r\n            data.addColumn('date', 'X');\r\n            data.addColumn('number', 'In Store');\r\n            data.addColumn('number', 'Minimum');\r\n\r\n            var options = {\r\n                hAxis: {\r\n                    title: 'Date'\r\n                },\r\n                vAxis: {\r\n                    title: 'In Store'\r\n                }\r\n            };\r\n\r\n            var chart_data = [];\r\n            for(var i = 0; i < movement_data.movements.length; i++){\r\n                var row = [new moment(movement_data.movements[i].created_at).toDate(), movement_data.movements[i].result_quantity, movement_data.item.minimum_level];\r\n                chart_data.push(row);\r\n            }\r\n            data.addRows(chart_data);\r\n\r\n            var chart = new google.visualization.LineChart(document.getElementById('chart_div'));\r\n            chart.draw(data, options);\r\n\r\n\r\n        },\r\n    }\r\n});\r\nVue.component('item-show', {\r\n    template: document.querySelector(\"#item-show-template\"),\r\n    data: function () {\r\n        return {\r\n            item: false,\r\n            item_id: \"\",\r\n            direction: \"\",\r\n            movements: [],\r\n            new_movement: {\r\n                description: \"\",\r\n                reference: \"\",\r\n                quantity: \"\"\r\n            },\r\n            saving: false,\r\n        }\r\n    },\r\n    props: ['passed_item_id'],\r\n    ready: function(){\r\n        this.item_id = this.passed_item_id;\r\n        this.fetchItem();\r\n       // this.fetchLastMovements();\r\n\r\n    },\r\n    methods: {\r\n        fetchItem: function(){\r\n            this.$http.get(\"/api/v1/items/\" + this.item_id, function(response){\r\n                this.item = response.item;\r\n            });\r\n        },\r\n        saveNewMovement: function(e){\r\n            this.saving = true;\r\n            e.preventDefault();\r\n            var toSend = this.new_movement;\r\n            this.new_movement.quantity *= this.direction;\r\n            debugger;\r\n            this.$http.post(\"/api/v1/items/\" + this.item_id + \"/movements/\", this.new_movement, function(response){\r\n                this.saving = false;\r\n                this.movements.push(response.movement);\r\n                this.item = response.item;\r\n\r\n                this.new_movement.description = \"\";\r\n                this.new_movement.reference = \"\";\r\n                this.new_movement.quantity = \"\";\r\n            });\r\n        }\r\n    }\r\n});\r\nVue.component('items-list', {\r\n    template: document.querySelector(\"#items-list-template\"),\r\n    data: function () {\r\n        return {\r\n            items: [],\r\n            new_item: {item_name: \"\", client: {},\r\n                created_at: new moment()},\r\n            deleteConfirm: false,\r\n            from: 0,\r\n            to: 0,\r\n            total: 0,\r\n            current_page: 0,\r\n            last_page: 0,\r\n            filtered_to_client_id: \"\",\r\n            client_filter_input_text: '',\r\n            sortKey: 'item_name',\r\n            reverse: false,\r\n            columns: [\r\n                {id:'item_name', name:\"Name\", click: function(a,b,c){\r\n                    this.redirectToURL('/items/' + item.id);\r\n                } },\r\n                {id:'client_name', name:\"Client\" },\r\n                {id:'item_code', name:\"Code\" },\r\n                {id:'quantity', name:\"Qty\" },\r\n                {id:'minimum_level', name:\"Min Level\" },\r\n                {id:'created_at', name:\"Created\" }],\r\n        }\r\n    },\r\n    props: [],\r\n    ready: function(){\r\n        this.fetchItems();\r\n        this.clientNameTypeahead();\r\n    },\r\n\r\n    methods: {\r\n        sortBy: function(sortKey){\r\n            var column = null;\r\n            for(var i = 0; i < this.columns.length; i++){\r\n                if(this.columns[i].name == sortKey){\r\n                    column = this.columns[i];\r\n                    break;\r\n                }\r\n            }\r\n            this.reverse = (this.sortKey == sortKey) ? !this.reverse : false;\r\n            this.sortKey = sortKey;\r\n        },\r\n        fetchItems: function(page){\r\n            var url = 'api/v1/items?page=' + page;\r\n            if(this.filtered_to_client_id){\r\n                url += \"&clientId=\" + this.filtered_to_client_id;\r\n            }\r\n\r\n            this.$http.get(url, function(response){\r\n                this.from = response.from;\r\n                this.to = response.to;\r\n                this.total = response.total;\r\n                this.current_page = response.current_page;\r\n                this.last_page = response.last_page;\r\n                this.items = [];\r\n                for(var i = 0; i < response.data.length; i++){\r\n                    var row = response.data[i];\r\n                    row.client_id = row.client.id;\r\n                    row.client_name = row.client.name;\r\n\r\n                    this.items.push(row);\r\n\r\n                }\r\n                makeTableResponsive();\r\n            });\r\n        },\r\n\r\n        saveNewItem: function(){\r\n\r\n            /* if(this.new_item.item_name == \"\"){\r\n             addAlert(\"Please add an item name.\", \"danger\");\r\n             return;\r\n             }*/\r\n\r\n            this.$http.post('api/v1/items', this.new_item, function(d){\r\n                d.item.client_id = d.item.client.id;\r\n                d.item.client_name = d.item.client.name;\r\n                this.items.push(d.item);\r\n                this.new_item = {item_name: \"\",\r\n                    created_at: new moment().format()};\r\n            }).error(httpErrorHandler);\r\n        },\r\n        redirectToURL: function(url){\r\n            document.location = url;\r\n        },\r\n        clientNameTypeahead: function(){\r\n\r\n            $.get('/api/v1/clients', function(data){\r\n                var ta =$(\"#client-name-typeahead\");\r\n                if(ta.typeahead){\r\n                    ta.typeahead({\r\n                        source:data.clients,\r\n                    });\r\n                }\r\n\r\n                var ta = $(\"#client-filter-typeahead\");\r\n                if(ta.typeahead){\r\n\r\n                    ta.typeahead({\r\n                        source:data.clients,\r\n                    });\r\n                }\r\n\r\n            },'json');\r\n        },\r\n        getSelectedClient: function(){\r\n            var ta =$(\"#client-name-typeahead\");\r\n            var current = ta.typeahead(\"getActive\");\r\n\r\n            if(current.id){\r\n                this.new_item.client_id = current.id;\r\n                this.new_item.client = current;\r\n\r\n            }\r\n        },\r\n        filterToSelectedClient: function(){\r\n            var ta =$(\"#client-filter-typeahead\");\r\n            var current = ta.typeahead(\"getActive\");\r\n\r\n            if(current.id){\r\n                this.filtered_to_client_id = current.id;\r\n                this.fetchItems(0);\r\n\r\n            }\r\n        },\r\n        removeFilterToSelectedClient: function(e){\r\n            this.filtered_to_client_id = \"\";\r\n            this.client_filter_input_text = \"\";\r\n            this.fetchItems(0);\r\n        },\r\n\r\n        deleteAreYouSure: function(e){\r\n            this.deleteConfirm = true;\r\n\r\n            e.stopPropagation();\r\n        },\r\n\r\n        deleteItem: function(item, e){\r\n\r\n            var i = item;\r\n            this.items.$remove(i);\r\n            this.$http.delete('api/v1/items/' + item.id, {}, function(d){\r\n\r\n                addAlert('Item Deleted', 'success');\r\n            });\r\n        },\r\n        editItem: function(item, e){\r\n            var i = item;\r\n\r\n        }\r\n    }\r\n});\r\n\r\nnew Vue({\r\n    el: \"#context-test\",\r\n    created: function(){\r\n        this.$on('movements-received', function(d){\r\n            this.$broadcast('movements-received', d);\r\n        });\r\n        this.$on('new-movement-saved', function(d){\r\n            this.$broadcast('new-movement-saved');\r\n        })\r\n    }\r\n});\r\n","$(\"#item_movements_show\").length > 0 ? new Vue({\r\n    el: \"#item_movements_show\",\r\n    ready: function(){\r\n        console.log(this.item_id);\r\n        this.fetchMovement();\r\n\r\n    },\r\n\r\n    data: {\r\n        movement: {name: \"Loading..\"},\r\n        item: {},\r\n        item_id: \"\",\r\n        id: \"\",\r\n    },\r\n    methods: {\r\n        fetchMovement: function(){\r\n            this.$http.get(\"/api/v1/items/\" + this.item_id + \"/movements/\" + this.id, function(response){\r\n                this.movement = response.movement;\r\n                this.item = response.item;\r\n            });\r\n        },\r\n     /*   fetchLastMovements: function(){\r\n            this.$http.get(\"/api/v1/items/\"+ this.item_id + \"/movements?max=5\", function(response){\r\n                this.movements = response.movements;\r\n            });\r\n        },\r\n        saveNewMovement: function(e){\r\n            this.saving = true;\r\n            e.preventDefault();\r\n            this.new_movement.quantity *= this.direction;\r\n            this.$http.post(\"/api/v1/items/\" + this.item_id + \"/movements/\", this.new_movement, function(response){\r\n                this.saving = false;\r\n                this.movements.push(response.movement);\r\n                this.item = response.item;\r\n\r\n                this.item.quantity +=this.new_movement.quantity;\r\n                this.new_movement.description = \"\";\r\n                this.new_movement.reference = \"\";\r\n                this.new_movement.quantity = \"\";\r\n            }).error(function(d,s,r){\r\n                // re-enable saving and call generic handler.\r\n                this.saving = false;\r\n                window.httpErrorHandler(d,s,r);\r\n            });\r\n        }*/\r\n    }\r\n}) : null;","\r\nvar addAlert = function(message, type, delay){\r\n    if(typeof delay == \"undefined\"){\r\n        delay = 1000;\r\n    }\r\n\r\n    var alert = $(\"#alert-template\").html();\r\n    alert = alert.replace(\"{alert-type}\", type);\r\n    alert = alert.replace(\"{alert-message}\", message);\r\n\r\n    var $alert = $(alert);\r\n    $(\".overlay-alert\").append($alert);\r\n\r\n    if(delay > -1){\r\n        window.setTimeout(function(){\r\n            $alert.fadeOut(1000, function(){$alert.remove()});\r\n        },delay);\r\n    }\r\n\r\n};\r\n\r\nwindow.httpErrorHandler = function(d,s,r){\r\n    if(!d && !s && !r) return;\r\n    if(s == 422){\r\n        // validation error.\r\n        var errors = [];\r\n        for(var failed_field in d){\r\n            for(var i = 0; i < d[failed_field].length; i++){\r\n                errors.push(d[failed_field][i]);\r\n            }\r\n        }\r\n\r\n        if(errors.length > 0){\r\n            addAlert(\"There were errors! Your change has not been saved:<br/><br/>\" + errors.join(\"<br/>\"), \"danger\", 5000);\r\n        }\r\n    }\r\n    else{\r\n        addAlert(\"HTTP error code \" + s + \" was thrown.\", -1);\r\n        debugger;\r\n    }\r\n}"],"sourceRoot":"/source/"}